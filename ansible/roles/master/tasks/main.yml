# roles/master/tasks/main.yml

- name: Kubernetes Tools installieren
  shell: |
    cd /tmp
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubeadm
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubelet
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl
    install -o root -g root -m 0755 kubeadm /usr/local/bin/kubeadm
    install -o root -g root -m 0755 kubelet /usr/local/bin/kubelet
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  args:
    creates: /usr/local/bin/kubeadm

- name: Symlink für kubelet erstellen
  file:
    src: /usr/local/bin/kubelet
    dest: /usr/bin/kubelet
    state: link
    force: true

- name: Kubelet systemd konfigurieren
  shell: |
    curl -sS https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service -o /etc/systemd/system/kubelet.service
    mkdir -p /etc/systemd/system/kubelet.service.d
    curl -sS https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf -o /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: Setze cgroup-driver
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: "^KUBELET_KUBEADM_ARGS="
    line: "KUBELET_KUBEADM_ARGS=--cgroup-driver=systemd"

- name: Systemd neu laden
  command: systemctl daemon-reexec

- name: Systemd reload und kubelet aktivieren
  systemd:
    name: kubelet
    enabled: true
    state: restarted
    daemon_reload: true

- name: Kubernetes Cluster initialisieren
  command: kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=Port-10250
  register: kubeadm_output
  ignore_errors: true

- name: Kubelet-Logs anzeigen bei Fehler
  shell: journalctl -xeu kubelet --no-pager | tail -n 50
  when: kubeadm_output.rc != 0
  register: kubelet_logs
  ignore_errors: true

- debug:
    var: kubelet_logs.stdout_lines
  when: kubeadm_output.rc != 0

- name: Join-Befehl extrahieren und speichern (korrekt einzeilig)
  shell: |
    echo "{{ kubeadm_output.stdout_lines | join('\n') }}" | \
    awk '/kubeadm join/{f=1} f{print} /--discovery-token-ca-cert-hash/{f=0}' | \
    tr -d '\n' | sed 's/\s\+/ /g' > /home/ubuntu/join-command.sh
    chmod +x /home/ubuntu/join-command.sh
  when: kubeadm_output.rc == 0

- name: Join-Skript auf Ansible Host holen
  fetch:
    src: /home/ubuntu/join-command.sh
    dest: /tmp/join-command.sh
    flat: yes
  when: kubeadm_output.rc == 0

- name: Kubeconfig für ubuntu User erstellen
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755

- name: admin.conf kopieren
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: true
    owner: ubuntu
    group: ubuntu
    mode: 0600
  when: kubeadm_output.rc == 0

- name: Calico Netzwerk installieren
  command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: kubeadm_output.rc == 0
