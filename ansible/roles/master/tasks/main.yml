- name: Kubelet Pfad fixen wenn nicht vorhanden
  file:
    src: /usr/local/bin/kubelet
    dest: /usr/bin/kubelet
    state: link
    force: yes
  become: true

- name: Deaktiviere Swap sofort
  command: swapoff -a

- name: Deaktiviere Swap persistent
  replace:
    path: /etc/fstab
    regexp: '^\s*(\S+)\s+swap\s+(\S+)\s+.*$'
    replace: '# \1 swap \2'

- name: Kernel-Module persistent konfigurieren
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Kernel-Module laden
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Sysctl-Einstellungen setzen
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

- name: Sysctl anwenden
  command: sysctl --system

- name: Install containerd
  apt:
    name: containerd
    state: present
    update_cache: true

- name: Create default containerd config
  shell: |
    mkdir -p /etc/containerd
    containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Set SystemdCgroup = true
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup\s*=\s*false'
    replace: '\1SystemdCgroup = true'

- name: Set pause image version to 3.9
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'sandbox_image = ".*"'
    line: 'sandbox_image = "registry.k8s.io/pause:3.9"'

- name: Restart containerd
  systemd:
    name: containerd
    enabled: true
    state: restarted

- name: Install crictl
  shell: |
    VERSION="v1.29.0"
    curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/${VERSION}/crictl-${VERSION}-linux-amd64.tar.gz
    tar zxvf crictl-${VERSION}-linux-amd64.tar.gz -C /usr/local/bin
    rm -f crictl-${VERSION}-linux-amd64.tar.gz
  args:
    creates: /usr/local/bin/crictl

- name: Create crictl.yaml config file
  copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///var/run/containerd/containerd.sock
      image-endpoint: unix:///var/run/containerd/containerd.sock

- name: Install Kubernetes tools (manuell)
  shell: |
    cd /tmp
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubeadm
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubelet
    curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl
    install -o root -g root -m 0755 kubeadm /usr/local/bin/kubeadm
    install -o root -g root -m 0755 kubelet /usr/local/bin/kubelet
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

- name: kubelet systemd service einrichten
  shell: |
    curl -sS https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service -o /etc/systemd/system/kubelet.service
    mkdir -p /etc/systemd/system/kubelet.service.d
    curl -sS https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf -o /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

- name: Set systemd cgroup driver for kubelet
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: "^KUBELET_KUBEADM_ARGS="
    line: "KUBELET_KUBEADM_ARGS=--cgroup-driver=systemd"

- name: Reload systemd daemon and restart containerd and kubelet
  block:
    - name: Reload systemd daemon
      command: systemctl daemon-reexec

    - name: Restart containerd
      systemd:
        name: containerd
        enabled: true
        state: restarted

    - name: Restart kubelet
      systemd:
        name: kubelet
        enabled: true
        state: restarted
        daemon_reload: true

- name: Prüfe ob containerd aktiv ist
  command: systemctl is-active containerd
  register: containerd_status
  failed_when: containerd_status.stdout != "active"

- name: Prüfe ob kubelet aktiv ist
  command: systemctl is-active kubelet
  register: kubelet_status
  failed_when: kubelet_status.stdout not in ["active", "activating"]

- name: Kubernetes-Cluster initialisieren
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=Port-10250
  register: kubeadm_output
  ignore_errors: true

- name: Kubelet-Logs anzeigen bei Fehler
  shell: journalctl -xeu kubelet --no-pager | tail -n 50
  when: kubeadm_output.rc != 0
  register: kubelet_logs
  ignore_errors: true

- debug:
    var: kubelet_logs.stdout_lines
  when: kubeadm_output.rc != 0

- name: Join-Befehl extrahieren
  shell: |
    echo "{{ kubeadm_output.stdout_lines | join('\n') }}" | grep -A 2 'kubeadm join' > /home/ubuntu/join-command.sh
    chmod +x /home/ubuntu/join-command.sh
  when: kubeadm_output.rc == 0

- name: Admin-Konfiguration nach /home/ubuntu kopieren
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
    group: ubuntu
    mode: 0600
  when: kubeadm_output.rc == 0
