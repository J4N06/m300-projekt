- name: Deaktiviere Swap sofort
  command: swapoff -a

- name: Deaktiviere Swap persistent
  replace:
    path: /etc/fstab
    regexp: '^\s*(\S+)\s+swap\s+(\S+)\s+.*$'
    replace: '# \1 swap \2'

- name: Kernel-Module persistent konfigurieren
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Kernel-Module laden
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Sysctl-Einstellungen setzen
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

- name: Sysctl anwenden
  command: sysctl --system

- name: Install containerd
  apt:
    name: containerd
    state: present
    update_cache: true
  become: true

- name: Create default containerd config
  shell: |
    mkdir -p /etc/containerd
    containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  become: true

- name: Set SystemdCgroup = true
  replace:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup\s*=\s*false'
    replace: "SystemdCgroup = true"
  become: true

- name: Set pause image version to 3.9
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'sandbox_image = ".*"'
    line: 'sandbox_image = "registry.k8s.io/pause:3.9"'
  become: true

- name: Restart containerd
  systemd:
    name: containerd
    enabled: true
    state: restarted
  become: true

- name: Notwendige Pakete installieren
  apt:
    name:
      - curl
      - ca-certificates
    state: present
    update_cache: true

- name: Install Kubernetes required tools
  apt:
    name:
      - socat
      - conntrack
    state: present
    update_cache: true
  become: true

- name: Install crictl
  shell: |
    VERSION="v1.29.0"
    curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/${VERSION}/crictl-${VERSION}-linux-amd64.tar.gz
    tar zxvf crictl-${VERSION}-linux-amd64.tar.gz -C /usr/local/bin
    rm -f crictl-${VERSION}-linux-amd64.tar.gz
  args:
    creates: /usr/local/bin/crictl

- name: Setze crictl Konfiguration
  copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///var/run/containerd/containerd.sock
      image-endpoint: unix:///var/run/containerd/containerd.sock
      timeout: 10
      debug: false
  become: true
