- name: Vorbereitung auf allen Nodes (Common Setup)
  hosts: all
  become: true
  roles:
    - common

- name: Kubernetes Master initialisieren
  hosts: master
  become: true
  roles:
    - master

- name: Worker Nodes beitreten lassen
  hosts: worker
  become: true
  roles:
    - worker
- name: Three-Tier-Demo via Helm von GitHub klonen und deployen (angepasst)
  hosts: master
  become: true
  tasks:
    - name: Git installieren (falls nicht vorhanden)
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Helm installieren (falls nicht vorhanden)
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Three-Tier-Demo Repo klonen
      become_user: ubuntu
      git:
        repo: https://github.com/iam-veeramalla/three-tier-architecture-demo.git
        dest: /home/ubuntu/three-tier-architecture-demo
        version: master

    - name: Healthchecks auf '/' patchen in allen Templates
      become_user: ubuntu
      shell: |
        find /home/ubuntu/three-tier-architecture-demo/K8s/helm/templates -type f -name "*.yaml" -exec sed -i 's|path: /health|path: /|g' {} +

    - name: PersistentVolumeClaims & StatefulSets aus Templates entfernen
      become_user: ubuntu
      shell: |
        # Beispiel: Entferne alle Zeilen mit persistentVolumeClaim
        find /home/ubuntu/three-tier-architecture-demo/K8s/helm/templates -type f -name "*.yaml" -exec sed -i '/persistentVolumeClaim:/,+2d' {} +
        # Optional: Redis-StatefulSet in Deployment Ã¤ndern oder ganz entfernen, je nach App-Logik

    - name: Redis StatefulSet Template entfernen (wenn du keine StatefullSets willst)
      become_user: ubuntu
      file:
        path: /home/ubuntu/three-tier-architecture-demo/K8s/helm/templates/redis-statefulset.yaml
        state: absent

    - name: Helm Chart deployen (mit lokalen Values, z.B. ohne Storage)
      become_user: ubuntu
      shell: |
        cd /home/ubuntu/three-tier-architecture-demo/K8s/helm
        helm upgrade --install robot-shop . --set redis.enabled=false --set mongodb.persistence.enabled=false --set mysql.persistence.enabled=false
- name: Kubernetes Dashboard zur Statusanzeige mit Flask einrichten
  hosts: master
  become: true
  tasks:
    - name: Python3 und pip installieren
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes

    - name: Flask installieren
      pip:
        name: flask

    - name: App-Verzeichnis anlegen
      file:
        path: /home/ubuntu/k8s_web
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0755"

    - name: app.py bereitstellen
      copy:
        src: files/app.py
        dest: /home/ubuntu/k8s_web/app.py
        owner: ubuntu
        group: ubuntu
        mode: "0644"

    - name: Systemd-Service-File bereitstellen
      copy:
        src: files/k8sweb.service
        dest: /etc/systemd/system/k8sweb.service
        owner: root
        group: root
        mode: "0644"

    - name: Systemd neu laden
      command: systemctl daemon-reload

    - name: Flask Dashboard aktivieren und starten
      systemd:
        name: k8sweb
        enabled: yes
        state: restarted
