apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  labels:
    grafana_datasource: "1"
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  provider.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /etc/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-node-exporter
data:
  node-exporter-dashboard.json: |
    {
      "overwrite": true,
      "dashboard": {
        "id": null,
        "uid": "000000001",
        "title": "Node Exporter Full",
        "panels": [ ... ],
        ...
      }
    }
    # Hier musst du den vollständigen JSON-Inhalt von Dashboard ID 1860 einfügen.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: ds
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: db
              mountPath: /etc/grafana/provisioning/dashboards/provider.yaml
              subPath: provider.yaml
            - name: dashboard-json
              mountPath: /etc/grafana/dashboards/node-exporter-dashboard.json
              subPath: node-exporter-dashboard.json
      volumes:
        - name: ds
          configMap:
            name: grafana-datasources
        - name: db
          configMap:
            name: grafana-dashboards
        - name: dashboard-json
          configMap:
            name: grafana-dashboard-node-exporter

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30300
  selector:
    app: grafana
