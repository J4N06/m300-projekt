apiVersion: v1
kind: Namespace
metadata:
  name: webshop
---
apiVersion: v1
kind: Secret
metadata:
  name: webshop-secrets
  namespace: webshop
type: Opaque
stringData:
  DATABASE_URL: "postgres://user:password@postgres:5432/webshop"
  JWT_SECRET: "supergeheimespasswort"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: webshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: webshop
            - name: POSTGRES_USER
              value: user
            - name: POSTGRES_PASSWORD
              value: password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: webshop
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: webshop
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: webshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: your-dockerhub/webshop-backend:latest
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: webshop-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: webshop
spec:
  selector:
    app: backend
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: webshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: your-dockerhub/webshop-frontend:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: webshop
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
  type:Â LoadBalancer