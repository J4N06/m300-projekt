name: Deploy Monitoring Cluster

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tf-outputs
        run: |
          echo "MASTER_DNS=$(terraform output -raw master_dns)" >> $GITHUB_ENV
          echo "WORKER1_DNS=$(terraform output -raw worker1_dns)" >> $GITHUB_ENV
          echo "WORKER2_DNS=$(terraform output -raw worker2_dns)" >> $GITHUB_ENV

      - name: Generate Inventory File
        run: |
          cat <<EOF > inventory.ini
          [master]
          $MASTER_DNS ansible_user=ubuntu

          [worker]
          $WORKER1_DNS ansible_user=ubuntu
          $WORKER2_DNS ansible_user=ubuntu

          [all:vars]
          ansible_ssh_private_key_file=~/.ssh/id_rsa
          ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
          EOF

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible sshpass

      - name: Add SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.K8S_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini playbook.yml
